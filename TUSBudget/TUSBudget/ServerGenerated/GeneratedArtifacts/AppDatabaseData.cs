//------------------------------------------------------------------------------
// <auto-generated>
//    このコードはテンプレートから生成されました。
//
//    このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//    このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM リレーションシップのメタデータ

[assembly: EdmRelationshipAttribute("AppDatabaseData", "AvailableParts_PriceInfo1", "AvailablePartsSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AppDatabaseData.Implementation.AvailablePartsSetItem), "PriceInfoSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AppDatabaseData.Implementation.PriceInfoSetItem), true)]
[assembly: EdmRelationshipAttribute("AppDatabaseData", "NeededBoards_NeededParts1", "NeededPartsSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AppDatabaseData.Implementation.NeededPartsSetItem), "NeededBoardsSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AppDatabaseData.Implementation.NeededBoardsSetItem), true)]
[assembly: EdmRelationshipAttribute("AppDatabaseData", "NeededParts_AvailableParts1", "AvailablePartsSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AppDatabaseData.Implementation.AvailablePartsSetItem), "NeededPartsSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AppDatabaseData.Implementation.NeededPartsSetItem), true)]
[assembly: EdmRelationshipAttribute("AppDatabaseData", "PriceInfo_StoreInfo1", "StoreInfoSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AppDatabaseData.Implementation.StoreInfoSetItem), "PriceInfoSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AppDatabaseData.Implementation.PriceInfoSetItem), true)]
[assembly: EdmRelationshipAttribute("AppDatabaseData", "StockSet_AvailableParts", "AvailablePartsSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AppDatabaseData.Implementation.AvailablePartsSetItem), "StockSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AppDatabaseData.Implementation.StockSetItem), true)]

#endregion

namespace AppDatabaseData.Implementation
{
    #region コンテキスト
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    public partial class AppDatabaseDataObjectContext : ObjectContext
    {
        #region コンストラクター
    
        /// <summary>
        /// アプリケーション構成ファイルの 'AppDatabaseDataObjectContext' セクションにある接続文字列を使用して新しい AppDatabaseDataObjectContext オブジェクトを初期化します。
        /// </summary>
        public AppDatabaseDataObjectContext() : base("name=AppDatabaseDataObjectContext", "AppDatabaseDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい AppDatabaseDataObjectContext オブジェクトを初期化します。
        /// </summary>
        public AppDatabaseDataObjectContext(string connectionString) : base(connectionString, "AppDatabaseDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい AppDatabaseDataObjectContext オブジェクトを初期化します。
        /// </summary>
        public AppDatabaseDataObjectContext(EntityConnection connection) : base(connection, "AppDatabaseDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分メソッド
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<AvailablePartsSetItem> AvailablePartsSet
        {
            get
            {
                if ((_AvailablePartsSet == null))
                {
                    _AvailablePartsSet = base.CreateObjectSet<AvailablePartsSetItem>("AvailablePartsSet");
                }
                return _AvailablePartsSet;
            }
        }
        private ObjectSet<AvailablePartsSetItem> _AvailablePartsSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<NeededBoardsSetItem> NeededBoardsSet
        {
            get
            {
                if ((_NeededBoardsSet == null))
                {
                    _NeededBoardsSet = base.CreateObjectSet<NeededBoardsSetItem>("NeededBoardsSet");
                }
                return _NeededBoardsSet;
            }
        }
        private ObjectSet<NeededBoardsSetItem> _NeededBoardsSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<NeededPartsSetItem> NeededPartsSet
        {
            get
            {
                if ((_NeededPartsSet == null))
                {
                    _NeededPartsSet = base.CreateObjectSet<NeededPartsSetItem>("NeededPartsSet");
                }
                return _NeededPartsSet;
            }
        }
        private ObjectSet<NeededPartsSetItem> _NeededPartsSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<PriceInfoSetItem> PriceInfoSet
        {
            get
            {
                if ((_PriceInfoSet == null))
                {
                    _PriceInfoSet = base.CreateObjectSet<PriceInfoSetItem>("PriceInfoSet");
                }
                return _PriceInfoSet;
            }
        }
        private ObjectSet<PriceInfoSetItem> _PriceInfoSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<StockSetItem> StockSet
        {
            get
            {
                if ((_StockSet == null))
                {
                    _StockSet = base.CreateObjectSet<StockSetItem>("StockSet");
                }
                return _StockSet;
            }
        }
        private ObjectSet<StockSetItem> _StockSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<StoreInfoSetItem> StoreInfoSet
        {
            get
            {
                if ((_StoreInfoSet == null))
                {
                    _StoreInfoSet = base.CreateObjectSet<StoreInfoSetItem>("StoreInfoSet");
                }
                return _StoreInfoSet;
            }
        }
        private ObjectSet<StoreInfoSetItem> _StoreInfoSet;

        #endregion
        #region AddTo メソッド
    
        /// <summary>
        /// AvailablePartsSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToAvailablePartsSet(AvailablePartsSetItem availablePartsSetItem)
        {
            base.AddObject("AvailablePartsSet", availablePartsSetItem);
        }
    
        /// <summary>
        /// NeededBoardsSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToNeededBoardsSet(NeededBoardsSetItem neededBoardsSetItem)
        {
            base.AddObject("NeededBoardsSet", neededBoardsSetItem);
        }
    
        /// <summary>
        /// NeededPartsSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToNeededPartsSet(NeededPartsSetItem neededPartsSetItem)
        {
            base.AddObject("NeededPartsSet", neededPartsSetItem);
        }
    
        /// <summary>
        /// PriceInfoSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToPriceInfoSet(PriceInfoSetItem priceInfoSetItem)
        {
            base.AddObject("PriceInfoSet", priceInfoSetItem);
        }
    
        /// <summary>
        /// StockSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToStockSet(StockSetItem stockSetItem)
        {
            base.AddObject("StockSet", stockSetItem);
        }
    
        /// <summary>
        /// StoreInfoSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToStoreInfoSet(StoreInfoSetItem storeInfoSetItem)
        {
            base.AddObject("StoreInfoSet", storeInfoSetItem);
        }

        #endregion
    }
    

    #endregion
    
    #region エンティティ
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppDatabaseData", Name="AvailablePartsSetItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvailablePartsSetItem : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい AvailablePartsSetItem オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="category">Category プロパティの初期値。</param>
        /// <param name="name">Name プロパティの初期値。</param>
        /// <param name="comment">Comment プロパティの初期値。</param>
        /// <param name="partsUri">PartsUri プロパティの初期値。</param>
        /// <param name="partsImageUri">PartsImageUri プロパティの初期値。</param>
        /// <param name="stock">Stock プロパティの初期値。</param>
        public static AvailablePartsSetItem CreateAvailablePartsSetItem(global::System.Int32 id, global::System.String category, global::System.String name, global::System.String comment, global::System.String partsUri, global::System.String partsImageUri, global::System.Int32 stock)
        {
            AvailablePartsSetItem availablePartsSetItem = new AvailablePartsSetItem();
            availablePartsSetItem.Id = id;
            availablePartsSetItem.Category = category;
            availablePartsSetItem.Name = name;
            availablePartsSetItem.Comment = comment;
            availablePartsSetItem.PartsUri = partsUri;
            availablePartsSetItem.PartsImageUri = partsImageUri;
            availablePartsSetItem.Stock = stock;
            return availablePartsSetItem;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LongName
        {
            get
            {
                return _LongName;
            }
            set
            {
                OnLongNameChanging(value);
                ReportPropertyChanging("LongName");
                _LongName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LongName");
                OnLongNameChanged();
            }
        }
        private global::System.String _LongName;
        partial void OnLongNameChanging(global::System.String value);
        partial void OnLongNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartsUri
        {
            get
            {
                return _PartsUri;
            }
            set
            {
                OnPartsUriChanging(value);
                ReportPropertyChanging("PartsUri");
                _PartsUri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PartsUri");
                OnPartsUriChanged();
            }
        }
        private global::System.String _PartsUri;
        partial void OnPartsUriChanging(global::System.String value);
        partial void OnPartsUriChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartsImageUri
        {
            get
            {
                return _PartsImageUri;
            }
            set
            {
                OnPartsImageUriChanging(value);
                ReportPropertyChanging("PartsImageUri");
                _PartsImageUri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PartsImageUri");
                OnPartsImageUriChanged();
            }
        }
        private global::System.String _PartsImageUri;
        partial void OnPartsImageUriChanging(global::System.String value);
        partial void OnPartsImageUriChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Stock
        {
            get
            {
                return _Stock;
            }
            set
            {
                OnStockChanging(value);
                ReportPropertyChanging("Stock");
                _Stock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stock");
                OnStockChanged();
            }
        }
        private global::System.Int32 _Stock;
        partial void OnStockChanging(global::System.Int32 value);
        partial void OnStockChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "AvailableParts_PriceInfo1", "PriceInfoSet")]
        public EntityCollection<PriceInfoSetItem> PriceInfoSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PriceInfoSetItem>("AppDatabaseData.AvailableParts_PriceInfo1", "PriceInfoSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PriceInfoSetItem>("AppDatabaseData.AvailableParts_PriceInfo1", "PriceInfoSet", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "NeededParts_AvailableParts1", "NeededPartsSet")]
        public EntityCollection<NeededPartsSetItem> NeededPartsSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NeededPartsSetItem>("AppDatabaseData.NeededParts_AvailableParts1", "NeededPartsSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NeededPartsSetItem>("AppDatabaseData.NeededParts_AvailableParts1", "NeededPartsSet", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "StockSet_AvailableParts", "StockSet")]
        public EntityCollection<StockSetItem> StockSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StockSetItem>("AppDatabaseData.StockSet_AvailableParts", "StockSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StockSetItem>("AppDatabaseData.StockSet_AvailableParts", "StockSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppDatabaseData", Name="NeededBoardsSetItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NeededBoardsSetItem : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい NeededBoardsSetItem オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="boardName">BoardName プロパティの初期値。</param>
        /// <param name="count">Count プロパティの初期値。</param>
        public static NeededBoardsSetItem CreateNeededBoardsSetItem(global::System.Int32 id, global::System.String boardName, global::System.Int32 count)
        {
            NeededBoardsSetItem neededBoardsSetItem = new NeededBoardsSetItem();
            neededBoardsSetItem.Id = id;
            neededBoardsSetItem.BoardName = boardName;
            neededBoardsSetItem.Count = count;
            return neededBoardsSetItem;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BoardName
        {
            get
            {
                return _BoardName;
            }
            set
            {
                OnBoardNameChanging(value);
                ReportPropertyChanging("BoardName");
                _BoardName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BoardName");
                OnBoardNameChanged();
            }
        }
        private global::System.String _BoardName;
        partial void OnBoardNameChanging(global::System.String value);
        partial void OnBoardNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NeededBoards_NeededParts
        {
            get
            {
                return _NeededBoards_NeededParts;
            }
            set
            {
                OnNeededBoards_NeededPartsChanging(value);
                ReportPropertyChanging("NeededBoards_NeededParts");
                _NeededBoards_NeededParts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeededBoards_NeededParts");
                OnNeededBoards_NeededPartsChanged();
            }
        }
        private Nullable<global::System.Int32> _NeededBoards_NeededParts;
        partial void OnNeededBoards_NeededPartsChanging(Nullable<global::System.Int32> value);
        partial void OnNeededBoards_NeededPartsChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "NeededBoards_NeededParts1", "NeededPartsSet")]
        public NeededPartsSetItem NeededPartsSetItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NeededPartsSetItem>("AppDatabaseData.NeededBoards_NeededParts1", "NeededPartsSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NeededPartsSetItem>("AppDatabaseData.NeededBoards_NeededParts1", "NeededPartsSet").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NeededPartsSetItem> NeededPartsSetItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NeededPartsSetItem>("AppDatabaseData.NeededBoards_NeededParts1", "NeededPartsSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NeededPartsSetItem>("AppDatabaseData.NeededBoards_NeededParts1", "NeededPartsSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppDatabaseData", Name="NeededPartsSetItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NeededPartsSetItem : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい NeededPartsSetItem オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="board">Board プロパティの初期値。</param>
        /// <param name="device">Device プロパティの初期値。</param>
        /// <param name="parts">Parts プロパティの初期値。</param>
        /// <param name="qty">Qty プロパティの初期値。</param>
        public static NeededPartsSetItem CreateNeededPartsSetItem(global::System.Int32 id, global::System.String board, global::System.String device, global::System.String parts, global::System.Int32 qty)
        {
            NeededPartsSetItem neededPartsSetItem = new NeededPartsSetItem();
            neededPartsSetItem.Id = id;
            neededPartsSetItem.Board = board;
            neededPartsSetItem.Device = device;
            neededPartsSetItem.Parts = parts;
            neededPartsSetItem.Qty = qty;
            return neededPartsSetItem;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Board
        {
            get
            {
                return _Board;
            }
            set
            {
                OnBoardChanging(value);
                ReportPropertyChanging("Board");
                _Board = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Board");
                OnBoardChanged();
            }
        }
        private global::System.String _Board;
        partial void OnBoardChanging(global::System.String value);
        partial void OnBoardChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Device
        {
            get
            {
                return _Device;
            }
            set
            {
                OnDeviceChanging(value);
                ReportPropertyChanging("Device");
                _Device = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Device");
                OnDeviceChanged();
            }
        }
        private global::System.String _Device;
        partial void OnDeviceChanging(global::System.String value);
        partial void OnDeviceChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Parts
        {
            get
            {
                return _Parts;
            }
            set
            {
                OnPartsChanging(value);
                ReportPropertyChanging("Parts");
                _Parts = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Parts");
                OnPartsChanged();
            }
        }
        private global::System.String _Parts;
        partial void OnPartsChanging(global::System.String value);
        partial void OnPartsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Int32 _Qty;
        partial void OnQtyChanging(global::System.Int32 value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NeededParts_AvailableParts
        {
            get
            {
                return _NeededParts_AvailableParts;
            }
            set
            {
                OnNeededParts_AvailablePartsChanging(value);
                ReportPropertyChanging("NeededParts_AvailableParts");
                _NeededParts_AvailableParts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeededParts_AvailableParts");
                OnNeededParts_AvailablePartsChanged();
            }
        }
        private Nullable<global::System.Int32> _NeededParts_AvailableParts;
        partial void OnNeededParts_AvailablePartsChanging(Nullable<global::System.Int32> value);
        partial void OnNeededParts_AvailablePartsChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "NeededBoards_NeededParts1", "NeededBoardsSet")]
        public EntityCollection<NeededBoardsSetItem> NeededBoardsSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NeededBoardsSetItem>("AppDatabaseData.NeededBoards_NeededParts1", "NeededBoardsSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NeededBoardsSetItem>("AppDatabaseData.NeededBoards_NeededParts1", "NeededBoardsSet", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "NeededParts_AvailableParts1", "AvailablePartsSet")]
        public AvailablePartsSetItem AvailablePartsSetItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailablePartsSetItem>("AppDatabaseData.NeededParts_AvailableParts1", "AvailablePartsSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailablePartsSetItem>("AppDatabaseData.NeededParts_AvailableParts1", "AvailablePartsSet").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AvailablePartsSetItem> AvailablePartsSetItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailablePartsSetItem>("AppDatabaseData.NeededParts_AvailableParts1", "AvailablePartsSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AvailablePartsSetItem>("AppDatabaseData.NeededParts_AvailableParts1", "AvailablePartsSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppDatabaseData", Name="PriceInfoSetItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PriceInfoSetItem : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい PriceInfoSetItem オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="unit">Unit プロパティの初期値。</param>
        /// <param name="price">Price プロパティの初期値。</param>
        /// <param name="qty">Qty プロパティの初期値。</param>
        /// <param name="availableParts_PriceInfo">AvailableParts_PriceInfo プロパティの初期値。</param>
        /// <param name="priceInfo_StoreInfo">PriceInfo_StoreInfo プロパティの初期値。</param>
        public static PriceInfoSetItem CreatePriceInfoSetItem(global::System.Int32 id, global::System.String unit, global::System.Int32 price, global::System.Int32 qty, global::System.Int32 availableParts_PriceInfo, global::System.Int32 priceInfo_StoreInfo)
        {
            PriceInfoSetItem priceInfoSetItem = new PriceInfoSetItem();
            priceInfoSetItem.Id = id;
            priceInfoSetItem.Unit = unit;
            priceInfoSetItem.Price = price;
            priceInfoSetItem.Qty = qty;
            priceInfoSetItem.AvailableParts_PriceInfo = availableParts_PriceInfo;
            priceInfoSetItem.PriceInfo_StoreInfo = priceInfo_StoreInfo;
            return priceInfoSetItem;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Int32 _Price;
        partial void OnPriceChanging(global::System.Int32 value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Int32 _Qty;
        partial void OnQtyChanging(global::System.Int32 value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AvailableParts_PriceInfo
        {
            get
            {
                return _AvailableParts_PriceInfo;
            }
            set
            {
                OnAvailableParts_PriceInfoChanging(value);
                ReportPropertyChanging("AvailableParts_PriceInfo");
                _AvailableParts_PriceInfo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvailableParts_PriceInfo");
                OnAvailableParts_PriceInfoChanged();
            }
        }
        private global::System.Int32 _AvailableParts_PriceInfo;
        partial void OnAvailableParts_PriceInfoChanging(global::System.Int32 value);
        partial void OnAvailableParts_PriceInfoChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceInfo_StoreInfo
        {
            get
            {
                return _PriceInfo_StoreInfo;
            }
            set
            {
                OnPriceInfo_StoreInfoChanging(value);
                ReportPropertyChanging("PriceInfo_StoreInfo");
                _PriceInfo_StoreInfo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceInfo_StoreInfo");
                OnPriceInfo_StoreInfoChanged();
            }
        }
        private global::System.Int32 _PriceInfo_StoreInfo;
        partial void OnPriceInfo_StoreInfoChanging(global::System.Int32 value);
        partial void OnPriceInfo_StoreInfoChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "AvailableParts_PriceInfo1", "AvailablePartsSet")]
        public AvailablePartsSetItem AvailablePartsSetItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailablePartsSetItem>("AppDatabaseData.AvailableParts_PriceInfo1", "AvailablePartsSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailablePartsSetItem>("AppDatabaseData.AvailableParts_PriceInfo1", "AvailablePartsSet").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AvailablePartsSetItem> AvailablePartsSetItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailablePartsSetItem>("AppDatabaseData.AvailableParts_PriceInfo1", "AvailablePartsSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AvailablePartsSetItem>("AppDatabaseData.AvailableParts_PriceInfo1", "AvailablePartsSet", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "PriceInfo_StoreInfo1", "StoreInfoSet")]
        public StoreInfoSetItem StoreInfoSetItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreInfoSetItem>("AppDatabaseData.PriceInfo_StoreInfo1", "StoreInfoSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreInfoSetItem>("AppDatabaseData.PriceInfo_StoreInfo1", "StoreInfoSet").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StoreInfoSetItem> StoreInfoSetItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreInfoSetItem>("AppDatabaseData.PriceInfo_StoreInfo1", "StoreInfoSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StoreInfoSetItem>("AppDatabaseData.PriceInfo_StoreInfo1", "StoreInfoSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppDatabaseData", Name="StockSetItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockSetItem : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい StockSetItem オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="stackQty">StackQty プロパティの初期値。</param>
        public static StockSetItem CreateStockSetItem(global::System.Int32 id, global::System.Int32 stackQty)
        {
            StockSetItem stockSetItem = new StockSetItem();
            stockSetItem.Id = id;
            stockSetItem.StackQty = stackQty;
            return stockSetItem;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StackQty
        {
            get
            {
                return _StackQty;
            }
            set
            {
                OnStackQtyChanging(value);
                ReportPropertyChanging("StackQty");
                _StackQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StackQty");
                OnStackQtyChanged();
            }
        }
        private global::System.Int32 _StackQty;
        partial void OnStackQtyChanging(global::System.Int32 value);
        partial void OnStackQtyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StockSet_AvailableParts
        {
            get
            {
                return _StockSet_AvailableParts;
            }
            set
            {
                OnStockSet_AvailablePartsChanging(value);
                ReportPropertyChanging("StockSet_AvailableParts");
                _StockSet_AvailableParts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockSet_AvailableParts");
                OnStockSet_AvailablePartsChanged();
            }
        }
        private Nullable<global::System.Int32> _StockSet_AvailableParts;
        partial void OnStockSet_AvailablePartsChanging(Nullable<global::System.Int32> value);
        partial void OnStockSet_AvailablePartsChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "StockSet_AvailableParts", "AvailablePartsSet")]
        public AvailablePartsSetItem AvailablePartsSetItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailablePartsSetItem>("AppDatabaseData.StockSet_AvailableParts", "AvailablePartsSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailablePartsSetItem>("AppDatabaseData.StockSet_AvailableParts", "AvailablePartsSet").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AvailablePartsSetItem> AvailablePartsSetItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailablePartsSetItem>("AppDatabaseData.StockSet_AvailableParts", "AvailablePartsSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AvailablePartsSetItem>("AppDatabaseData.StockSet_AvailableParts", "AvailablePartsSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppDatabaseData", Name="StoreInfoSetItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoreInfoSetItem : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい StoreInfoSetItem オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="storeName">StoreName プロパティの初期値。</param>
        /// <param name="storeUri">StoreUri プロパティの初期値。</param>
        public static StoreInfoSetItem CreateStoreInfoSetItem(global::System.Int32 id, global::System.String storeName, global::System.String storeUri)
        {
            StoreInfoSetItem storeInfoSetItem = new StoreInfoSetItem();
            storeInfoSetItem.Id = id;
            storeInfoSetItem.StoreName = storeName;
            storeInfoSetItem.StoreUri = storeUri;
            return storeInfoSetItem;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoreName
        {
            get
            {
                return _StoreName;
            }
            set
            {
                OnStoreNameChanging(value);
                ReportPropertyChanging("StoreName");
                _StoreName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoreName");
                OnStoreNameChanged();
            }
        }
        private global::System.String _StoreName;
        partial void OnStoreNameChanging(global::System.String value);
        partial void OnStoreNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoreUri
        {
            get
            {
                return _StoreUri;
            }
            set
            {
                OnStoreUriChanging(value);
                ReportPropertyChanging("StoreUri");
                _StoreUri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoreUri");
                OnStoreUriChanged();
            }
        }
        private global::System.String _StoreUri;
        partial void OnStoreUriChanging(global::System.String value);
        partial void OnStoreUriChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppDatabaseData", "PriceInfo_StoreInfo1", "PriceInfoSet")]
        public EntityCollection<PriceInfoSetItem> PriceInfoSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PriceInfoSetItem>("AppDatabaseData.PriceInfo_StoreInfo1", "PriceInfoSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PriceInfoSetItem>("AppDatabaseData.PriceInfo_StoreInfo1", "PriceInfoSet", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
