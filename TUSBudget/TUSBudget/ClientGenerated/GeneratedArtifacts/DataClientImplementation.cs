//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region NeededParts
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class NeededParts :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.NeededParts.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Board
        {
            get
            {
                return this._Board;
            }
            set
            {
                if (this._Board != value)
                {
                    this.RaiseDataMemberChanging("Board");
                    this.ValidateProperty("Board", value);
                    this._Board = value;
                    this.RaiseDataMemberChanged("Board");
                }
            }
        }
        private string _Board;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Value
        {
            get
            {
                return this._Value;
            }
            set
            {
                if (this._Value != value)
                {
                    this.RaiseDataMemberChanging("Value");
                    this.ValidateProperty("Value", value);
                    this._Value = value;
                    this.RaiseDataMemberChanged("Value");
                }
            }
        }
        private string _Value;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Device
        {
            get
            {
                return this._Device;
            }
            set
            {
                if (this._Device != value)
                {
                    this.RaiseDataMemberChanging("Device");
                    this.ValidateProperty("Device", value);
                    this._Device = value;
                    this.RaiseDataMemberChanged("Device");
                }
            }
        }
        private string _Device;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Parts
        {
            get
            {
                return this._Parts;
            }
            set
            {
                if (this._Parts != value)
                {
                    this.RaiseDataMemberChanging("Parts");
                    this.ValidateProperty("Parts", value);
                    this._Parts = value;
                    this.RaiseDataMemberChanged("Parts");
                }
            }
        }
        private string _Parts;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Qty
        {
            get
            {
                return this._Qty;
            }
            set
            {
                if (this._Qty != value)
                {
                    this.RaiseDataMemberChanging("Qty");
                    this.ValidateProperty("Qty", value);
                    this._Qty = value;
                    this.RaiseDataMemberChanged("Qty");
                }
            }
        }
        private int _Qty;
        
        [global::System.ComponentModel.DataAnnotations.Association("NeededBoards_NeededParts", "Id", "NeededBoards_NeededParts")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<NeededBoards> NeededBoardsCollection
        {
            get
            {
                if (this._NeededBoardsCollection == null)
                {
                    this._NeededBoardsCollection = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.NeededBoards>(this, "NeededBoardsCollection", this.FilterNeededBoardsCollection, this.AttachNeededBoardsCollection, this.DetachNeededBoardsCollection);
                }
                return this._NeededBoardsCollection;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.NeededBoards> _NeededBoardsCollection;
        private void AttachNeededBoardsCollection(global::LightSwitchApplication.Implementation.NeededBoards entity)
        {
            entity.NeededParts = this;
        }
        private void DetachNeededBoardsCollection(global::LightSwitchApplication.Implementation.NeededBoards entity)
        {
            entity.NeededParts = null;
        }
        private bool FilterNeededBoardsCollection(global::LightSwitchApplication.Implementation.NeededBoards entity)
        {
            return global::System.Object.Equals(entity.NeededBoards_NeededParts, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.NeededParts.DetailsClass.IImplementation.NeededBoardsCollection
        {
            get
            {
                return this.NeededBoardsCollection;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> NeededParts_AvailableParts
        {
            get
            {
                return this._NeededParts_AvailableParts;
            }
            set
            {
                if (this._NeededParts_AvailableParts != value)
                {
                    this.RaiseDataMemberChanging("NeededParts_AvailableParts");
                    this.ValidateProperty("NeededParts_AvailableParts", value);
                    this._NeededParts_AvailableParts = value;
                    this.RaiseDataMemberChanged("NeededParts_AvailableParts");
                }
            }
        }
        private global::System.Nullable<int> _NeededParts_AvailableParts;
        
        [global::System.ComponentModel.DataAnnotations.Association("NeededParts_AvailableParts", "NeededParts_AvailableParts", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.AvailableParts AvailableParts
        {
            get
            {
                if (this._AvailableParts == null)
                {
                    this._AvailableParts = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.AvailableParts>(this, "AvailableParts", this.FilterAvailableParts);
                }
                return this._AvailableParts.Entity;
            }
            set
            {
                AvailableParts previous = this.AvailableParts;
                if (previous != value)
                {
                    this.ValidateProperty("AvailableParts", value);
                    if (previous != null)
                    {
                        this._AvailableParts.Entity = null;
                        previous.NeededPartsCollection.Remove(this);
                    }
                    if (value != null)
                    {
                        this.NeededParts_AvailableParts = value.Id;
                    }
                    else
                    {
                        this.NeededParts_AvailableParts = default(global::System.Nullable<int>);
                    }
                    this._AvailableParts.Entity = value;
                    if (value != null)
                    {
                        value.NeededPartsCollection.Add(this);
                    }
                    this.RaisePropertyChanged("AvailableParts");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.AvailableParts> _AvailableParts;
        private bool FilterAvailableParts(global::LightSwitchApplication.Implementation.AvailableParts entity)
        {
            return global::System.Object.Equals(entity.Id, this.NeededParts_AvailableParts);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.NeededParts.DetailsClass.IImplementation.AvailableParts
        {
            get
            {
                return this.AvailableParts;
            }
            set
            {
                this.AvailableParts = (global::LightSwitchApplication.Implementation.AvailableParts)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region AvailableParts
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class AvailableParts :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.AvailableParts.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Category
        {
            get
            {
                return this._Category;
            }
            set
            {
                if (this._Category != value)
                {
                    this.RaiseDataMemberChanging("Category");
                    this.ValidateProperty("Category", value);
                    this._Category = value;
                    this.RaiseDataMemberChanged("Category");
                }
            }
        }
        private string _Category;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if (this._Name != value)
                {
                    this.RaiseDataMemberChanging("Name");
                    this.ValidateProperty("Name", value);
                    this._Name = value;
                    this.RaiseDataMemberChanged("Name");
                }
            }
        }
        private string _Name;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string LongName
        {
            get
            {
                return this._LongName;
            }
            set
            {
                if (this._LongName != value)
                {
                    this.RaiseDataMemberChanging("LongName");
                    this.ValidateProperty("LongName", value);
                    this._LongName = value;
                    this.RaiseDataMemberChanged("LongName");
                }
            }
        }
        private string _LongName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                if (this._Comment != value)
                {
                    this.RaiseDataMemberChanging("Comment");
                    this.ValidateProperty("Comment", value);
                    this._Comment = value;
                    this.RaiseDataMemberChanged("Comment");
                }
            }
        }
        private string _Comment;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PartsUri
        {
            get
            {
                return this._PartsUri;
            }
            set
            {
                if (this._PartsUri != value)
                {
                    this.RaiseDataMemberChanging("PartsUri");
                    this.ValidateProperty("PartsUri", value);
                    this._PartsUri = value;
                    this.RaiseDataMemberChanged("PartsUri");
                }
            }
        }
        private string _PartsUri;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PartsImageUri
        {
            get
            {
                return this._PartsImageUri;
            }
            set
            {
                if (this._PartsImageUri != value)
                {
                    this.RaiseDataMemberChanging("PartsImageUri");
                    this.ValidateProperty("PartsImageUri", value);
                    this._PartsImageUri = value;
                    this.RaiseDataMemberChanged("PartsImageUri");
                }
            }
        }
        private string _PartsImageUri;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Stock
        {
            get
            {
                return this._Stock;
            }
            set
            {
                if (this._Stock != value)
                {
                    this.RaiseDataMemberChanging("Stock");
                    this.ValidateProperty("Stock", value);
                    this._Stock = value;
                    this.RaiseDataMemberChanged("Stock");
                }
            }
        }
        private int _Stock;
        
        [global::System.ComponentModel.DataAnnotations.Association("AvailableParts_PriceInfo", "Id", "AvailableParts_PriceInfo")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<PriceInfo> PriceInfoCollection
        {
            get
            {
                if (this._PriceInfoCollection == null)
                {
                    this._PriceInfoCollection = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PriceInfo>(this, "PriceInfoCollection", this.FilterPriceInfoCollection, this.AttachPriceInfoCollection, this.DetachPriceInfoCollection);
                }
                return this._PriceInfoCollection;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PriceInfo> _PriceInfoCollection;
        private void AttachPriceInfoCollection(global::LightSwitchApplication.Implementation.PriceInfo entity)
        {
            entity.AvailableParts = this;
        }
        private void DetachPriceInfoCollection(global::LightSwitchApplication.Implementation.PriceInfo entity)
        {
            entity.AvailableParts = null;
        }
        private bool FilterPriceInfoCollection(global::LightSwitchApplication.Implementation.PriceInfo entity)
        {
            return global::System.Object.Equals(entity.AvailableParts_PriceInfo, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.AvailableParts.DetailsClass.IImplementation.PriceInfoCollection
        {
            get
            {
                return this.PriceInfoCollection;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("NeededParts_AvailableParts", "Id", "NeededParts_AvailableParts")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<NeededParts> NeededPartsCollection
        {
            get
            {
                if (this._NeededPartsCollection == null)
                {
                    this._NeededPartsCollection = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.NeededParts>(this, "NeededPartsCollection", this.FilterNeededPartsCollection, this.AttachNeededPartsCollection, this.DetachNeededPartsCollection);
                }
                return this._NeededPartsCollection;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.NeededParts> _NeededPartsCollection;
        private void AttachNeededPartsCollection(global::LightSwitchApplication.Implementation.NeededParts entity)
        {
            entity.AvailableParts = this;
        }
        private void DetachNeededPartsCollection(global::LightSwitchApplication.Implementation.NeededParts entity)
        {
            entity.AvailableParts = null;
        }
        private bool FilterNeededPartsCollection(global::LightSwitchApplication.Implementation.NeededParts entity)
        {
            return global::System.Object.Equals(entity.NeededParts_AvailableParts, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.AvailableParts.DetailsClass.IImplementation.NeededPartsCollection
        {
            get
            {
                return this.NeededPartsCollection;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region PriceInfo
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class PriceInfo :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.PriceInfo.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Unit
        {
            get
            {
                return this._Unit;
            }
            set
            {
                if (this._Unit != value)
                {
                    this.RaiseDataMemberChanging("Unit");
                    this.ValidateProperty("Unit", value);
                    this._Unit = value;
                    this.RaiseDataMemberChanged("Unit");
                }
            }
        }
        private string _Unit;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Price
        {
            get
            {
                return this._Price;
            }
            set
            {
                if (this._Price != value)
                {
                    this.RaiseDataMemberChanging("Price");
                    this.ValidateProperty("Price", value);
                    this._Price = value;
                    this.RaiseDataMemberChanged("Price");
                }
            }
        }
        private int _Price;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Qty
        {
            get
            {
                return this._Qty;
            }
            set
            {
                if (this._Qty != value)
                {
                    this.RaiseDataMemberChanging("Qty");
                    this.ValidateProperty("Qty", value);
                    this._Qty = value;
                    this.RaiseDataMemberChanged("Qty");
                }
            }
        }
        private int _Qty;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int PriceInfo_StoreInfo
        {
            get
            {
                return this._PriceInfo_StoreInfo;
            }
            set
            {
                if (this._PriceInfo_StoreInfo != value)
                {
                    this.RaiseDataMemberChanging("PriceInfo_StoreInfo");
                    this.ValidateProperty("PriceInfo_StoreInfo", value);
                    this._PriceInfo_StoreInfo = value;
                    this.RaiseDataMemberChanged("PriceInfo_StoreInfo");
                }
            }
        }
        private int _PriceInfo_StoreInfo;
        
        [global::System.ComponentModel.DataAnnotations.Association("PriceInfo_StoreInfo", "PriceInfo_StoreInfo", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.StoreInfo StoreInfo
        {
            get
            {
                if (this._StoreInfo == null)
                {
                    this._StoreInfo = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.StoreInfo>(this, "StoreInfo", this.FilterStoreInfo);
                }
                return this._StoreInfo.Entity;
            }
            set
            {
                StoreInfo previous = this.StoreInfo;
                if (previous != value)
                {
                    this.ValidateProperty("StoreInfo", value);
                    if (previous != null)
                    {
                        this._StoreInfo.Entity = null;
                        previous.PriceInfoCollection.Remove(this);
                    }
                    if (value != null)
                    {
                        this.PriceInfo_StoreInfo = value.Id;
                    }
                    else
                    {
                        this.PriceInfo_StoreInfo = default(int);
                    }
                    this._StoreInfo.Entity = value;
                    if (value != null)
                    {
                        value.PriceInfoCollection.Add(this);
                    }
                    this.RaisePropertyChanged("StoreInfo");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.StoreInfo> _StoreInfo;
        private bool FilterStoreInfo(global::LightSwitchApplication.Implementation.StoreInfo entity)
        {
            return global::System.Object.Equals(entity.Id, this.PriceInfo_StoreInfo);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.PriceInfo.DetailsClass.IImplementation.StoreInfo
        {
            get
            {
                return this.StoreInfo;
            }
            set
            {
                this.StoreInfo = (global::LightSwitchApplication.Implementation.StoreInfo)value;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int AvailableParts_PriceInfo
        {
            get
            {
                return this._AvailableParts_PriceInfo;
            }
            set
            {
                if (this._AvailableParts_PriceInfo != value)
                {
                    this.RaiseDataMemberChanging("AvailableParts_PriceInfo");
                    this.ValidateProperty("AvailableParts_PriceInfo", value);
                    this._AvailableParts_PriceInfo = value;
                    this.RaiseDataMemberChanged("AvailableParts_PriceInfo");
                }
            }
        }
        private int _AvailableParts_PriceInfo;
        
        [global::System.ComponentModel.DataAnnotations.Association("AvailableParts_PriceInfo", "AvailableParts_PriceInfo", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.AvailableParts AvailableParts
        {
            get
            {
                if (this._AvailableParts == null)
                {
                    this._AvailableParts = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.AvailableParts>(this, "AvailableParts", this.FilterAvailableParts);
                }
                return this._AvailableParts.Entity;
            }
            set
            {
                AvailableParts previous = this.AvailableParts;
                if (previous != value)
                {
                    this.ValidateProperty("AvailableParts", value);
                    if (previous != null)
                    {
                        this._AvailableParts.Entity = null;
                        previous.PriceInfoCollection.Remove(this);
                    }
                    if (value != null)
                    {
                        this.AvailableParts_PriceInfo = value.Id;
                    }
                    else
                    {
                        this.AvailableParts_PriceInfo = default(int);
                    }
                    this._AvailableParts.Entity = value;
                    if (value != null)
                    {
                        value.PriceInfoCollection.Add(this);
                    }
                    this.RaisePropertyChanged("AvailableParts");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.AvailableParts> _AvailableParts;
        private bool FilterAvailableParts(global::LightSwitchApplication.Implementation.AvailableParts entity)
        {
            return global::System.Object.Equals(entity.Id, this.AvailableParts_PriceInfo);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.PriceInfo.DetailsClass.IImplementation.AvailableParts
        {
            get
            {
                return this.AvailableParts;
            }
            set
            {
                this.AvailableParts = (global::LightSwitchApplication.Implementation.AvailableParts)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region StoreInfo
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class StoreInfo :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.StoreInfo.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string StoreName
        {
            get
            {
                return this._StoreName;
            }
            set
            {
                if (this._StoreName != value)
                {
                    this.RaiseDataMemberChanging("StoreName");
                    this.ValidateProperty("StoreName", value);
                    this._StoreName = value;
                    this.RaiseDataMemberChanged("StoreName");
                }
            }
        }
        private string _StoreName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string StoreUri
        {
            get
            {
                return this._StoreUri;
            }
            set
            {
                if (this._StoreUri != value)
                {
                    this.RaiseDataMemberChanging("StoreUri");
                    this.ValidateProperty("StoreUri", value);
                    this._StoreUri = value;
                    this.RaiseDataMemberChanged("StoreUri");
                }
            }
        }
        private string _StoreUri;
        
        [global::System.ComponentModel.DataAnnotations.Association("PriceInfo_StoreInfo", "Id", "PriceInfo_StoreInfo")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<PriceInfo> PriceInfoCollection
        {
            get
            {
                if (this._PriceInfoCollection == null)
                {
                    this._PriceInfoCollection = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PriceInfo>(this, "PriceInfoCollection", this.FilterPriceInfoCollection, this.AttachPriceInfoCollection, this.DetachPriceInfoCollection);
                }
                return this._PriceInfoCollection;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.PriceInfo> _PriceInfoCollection;
        private void AttachPriceInfoCollection(global::LightSwitchApplication.Implementation.PriceInfo entity)
        {
            entity.StoreInfo = this;
        }
        private void DetachPriceInfoCollection(global::LightSwitchApplication.Implementation.PriceInfo entity)
        {
            entity.StoreInfo = null;
        }
        private bool FilterPriceInfoCollection(global::LightSwitchApplication.Implementation.PriceInfo entity)
        {
            return global::System.Object.Equals(entity.PriceInfo_StoreInfo, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.StoreInfo.DetailsClass.IImplementation.PriceInfoCollection
        {
            get
            {
                return this.PriceInfoCollection;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region NeededBoards
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class NeededBoards :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.NeededBoards.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string BoardName
        {
            get
            {
                return this._BoardName;
            }
            set
            {
                if (this._BoardName != value)
                {
                    this.RaiseDataMemberChanging("BoardName");
                    this.ValidateProperty("BoardName", value);
                    this._BoardName = value;
                    this.RaiseDataMemberChanged("BoardName");
                }
            }
        }
        private string _BoardName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Count
        {
            get
            {
                return this._Count;
            }
            set
            {
                if (this._Count != value)
                {
                    this.RaiseDataMemberChanging("Count");
                    this.ValidateProperty("Count", value);
                    this._Count = value;
                    this.RaiseDataMemberChanged("Count");
                }
            }
        }
        private int _Count;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> NeededBoards_NeededParts
        {
            get
            {
                return this._NeededBoards_NeededParts;
            }
            set
            {
                if (this._NeededBoards_NeededParts != value)
                {
                    this.RaiseDataMemberChanging("NeededBoards_NeededParts");
                    this.ValidateProperty("NeededBoards_NeededParts", value);
                    this._NeededBoards_NeededParts = value;
                    this.RaiseDataMemberChanged("NeededBoards_NeededParts");
                }
            }
        }
        private global::System.Nullable<int> _NeededBoards_NeededParts;
        
        [global::System.ComponentModel.DataAnnotations.Association("NeededBoards_NeededParts", "NeededBoards_NeededParts", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.NeededParts NeededParts
        {
            get
            {
                if (this._NeededParts == null)
                {
                    this._NeededParts = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.NeededParts>(this, "NeededParts", this.FilterNeededParts);
                }
                return this._NeededParts.Entity;
            }
            set
            {
                NeededParts previous = this.NeededParts;
                if (previous != value)
                {
                    this.ValidateProperty("NeededParts", value);
                    if (previous != null)
                    {
                        this._NeededParts.Entity = null;
                        previous.NeededBoardsCollection.Remove(this);
                    }
                    if (value != null)
                    {
                        this.NeededBoards_NeededParts = value.Id;
                    }
                    else
                    {
                        this.NeededBoards_NeededParts = default(global::System.Nullable<int>);
                    }
                    this._NeededParts.Entity = value;
                    if (value != null)
                    {
                        value.NeededBoardsCollection.Add(this);
                    }
                    this.RaisePropertyChanged("NeededParts");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.NeededParts> _NeededParts;
        private bool FilterNeededParts(global::LightSwitchApplication.Implementation.NeededParts entity)
        {
            return global::System.Object.Equals(entity.Id, this.NeededBoards_NeededParts);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.NeededBoards.DetailsClass.IImplementation.NeededParts
        {
            get
            {
                return this.NeededParts;
            }
            set
            {
                this.NeededParts = (global::LightSwitchApplication.Implementation.NeededParts)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Table1Item
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Table1Item :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Table1Item.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ApplicationData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public ApplicationData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IApplicationDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-ApplicationDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.NeededParts> NeededPartsEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.NeededParts>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.AvailableParts> AvailablePartsEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.AvailableParts>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.PriceInfo> PriceInfoEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.PriceInfo>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.StoreInfo> StoreInfoEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.StoreInfo>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.NeededBoards> NeededBoardsEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.NeededBoards>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Table1Item> Table1ItemEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Table1Item>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new ApplicationDataEntityContainer();
        }
    
        internal sealed class ApplicationDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public ApplicationDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.NeededParts>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.AvailableParts>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.PriceInfo>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.StoreInfo>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.NeededBoards>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Table1Item>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IApplicationDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/NeededPartsSet_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/NeededPartsSet_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/NeededPartsSet_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginNeededPartsSet_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.NeededParts> EndNeededPartsSet_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/NeededPartsSet_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/NeededPartsSet_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/NeededPartsSet_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginNeededPartsSet_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.NeededParts> EndNeededPartsSet_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/NeededPartsSet_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/NeededPartsSet_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/NeededPartsSet_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginNeededPartsSet_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.NeededParts> EndNeededPartsSet_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/AvailablePartsSet_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/AvailablePartsSet_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/AvailablePartsSet_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAvailablePartsSet_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.AvailableParts> EndAvailablePartsSet_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/AvailablePartsSet_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/AvailablePartsSet_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/AvailablePartsSet_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAvailablePartsSet_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.AvailableParts> EndAvailablePartsSet_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/AvailablePartsSet_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/AvailablePartsSet_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/AvailablePartsSet_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginAvailablePartsSet_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.AvailableParts> EndAvailablePartsSet_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/PriceInfoSet_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/PriceInfoSet_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/PriceInfoSet_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPriceInfoSet_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.PriceInfo> EndPriceInfoSet_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/PriceInfoSet_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/PriceInfoSet_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/PriceInfoSet_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPriceInfoSet_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.PriceInfo> EndPriceInfoSet_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/PriceInfoSet_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/PriceInfoSet_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/PriceInfoSet_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginPriceInfoSet_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.PriceInfo> EndPriceInfoSet_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/StoreInfoSet_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/StoreInfoSet_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/StoreInfoSet_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginStoreInfoSet_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.StoreInfo> EndStoreInfoSet_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/StoreInfoSet_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/StoreInfoSet_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/StoreInfoSet_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginStoreInfoSet_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.StoreInfo> EndStoreInfoSet_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/StoreInfoSet_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/StoreInfoSet_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/StoreInfoSet_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginStoreInfoSet_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.StoreInfo> EndStoreInfoSet_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Query2", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Query2Response"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Query2DomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginQuery2(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.NeededParts> EndQuery2(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/NeededBoardsSet_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/NeededBoardsSet_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/NeededBoardsSet_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginNeededBoardsSet_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.NeededBoards> EndNeededBoardsSet_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/NeededBoardsSet_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/NeededBoardsSet_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/NeededBoardsSet_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginNeededBoardsSet_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.NeededBoards> EndNeededBoardsSet_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/NeededBoardsSet_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/NeededBoardsSet_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/NeededBoardsSet_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginNeededBoardsSet_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.NeededBoards> EndNeededBoardsSet_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Table1ItemSet_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Table1ItemSet_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Table1ItemSet_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginTable1ItemSet_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Table1Item> EndTable1ItemSet_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Table1ItemSet_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Table1ItemSet_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Table1ItemSet_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginTable1ItemSet_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Table1Item> EndTable1ItemSet_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Table1ItemSet_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Table1ItemSet_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Table1ItemSet_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginTable1ItemSet_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Table1Item> EndTable1ItemSet_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.NeededParts))
            {
                return new global::LightSwitchApplication.Implementation.NeededParts();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.AvailableParts))
            {
                return new global::LightSwitchApplication.Implementation.AvailableParts();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.PriceInfo))
            {
                return new global::LightSwitchApplication.Implementation.PriceInfo();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.StoreInfo))
            {
                return new global::LightSwitchApplication.Implementation.StoreInfo();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.NeededBoards))
            {
                return new global::LightSwitchApplication.Implementation.NeededBoards();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Table1Item))
            {
                return new global::LightSwitchApplication.Implementation.Table1Item();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.ApplicationData();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.Implementation.ApplicationData(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.NeededParts) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.NeededParts);
            }
            if (typeof(global::LightSwitchApplication.AvailableParts) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.AvailableParts);
            }
            if (typeof(global::LightSwitchApplication.PriceInfo) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.PriceInfo);
            }
            if (typeof(global::LightSwitchApplication.StoreInfo) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.StoreInfo);
            }
            if (typeof(global::LightSwitchApplication.NeededBoards) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.NeededBoards);
            }
            if (typeof(global::LightSwitchApplication.Table1Item) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Table1Item);
            }
            return null;
        }
    }
}
