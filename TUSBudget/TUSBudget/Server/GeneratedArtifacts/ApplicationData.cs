//------------------------------------------------------------------------------
// <auto-generated>
//    このコードはテンプレートから生成されました。
//
//    このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//    このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM リレーションシップのメタデータ

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "PriceInfo_StoreInfo", "StoreInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.StoreInfo), "PriceInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.PriceInfo), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "AvailableParts_PriceInfo", "AvailableParts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.AvailableParts), "PriceInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.PriceInfo), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "NeededBoards_NeededParts", "NeededParts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ApplicationData.Implementation.NeededParts), "NeededBoards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.NeededBoards), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "NeededParts_AvailableParts", "AvailableParts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ApplicationData.Implementation.AvailableParts), "NeededParts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.NeededParts), true)]

#endregion

namespace ApplicationData.Implementation
{
    #region コンテキスト
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    public partial class ApplicationDataObjectContext : ObjectContext
    {
        #region コンストラクター
    
        /// <summary>
        /// アプリケーション構成ファイルの 'ApplicationDataObjectContext' セクションにある接続文字列を使用して新しい ApplicationDataObjectContext オブジェクトを初期化します。
        /// </summary>
        public ApplicationDataObjectContext() : base("name=ApplicationDataObjectContext", "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい ApplicationDataObjectContext オブジェクトを初期化します。
        /// </summary>
        public ApplicationDataObjectContext(string connectionString) : base(connectionString, "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい ApplicationDataObjectContext オブジェクトを初期化します。
        /// </summary>
        public ApplicationDataObjectContext(EntityConnection connection) : base(connection, "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分メソッド
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<NeededParts> NeededPartsSet
        {
            get
            {
                if ((_NeededPartsSet == null))
                {
                    _NeededPartsSet = base.CreateObjectSet<NeededParts>("NeededPartsSet");
                }
                return _NeededPartsSet;
            }
        }
        private ObjectSet<NeededParts> _NeededPartsSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<AvailableParts> AvailablePartsSet
        {
            get
            {
                if ((_AvailablePartsSet == null))
                {
                    _AvailablePartsSet = base.CreateObjectSet<AvailableParts>("AvailablePartsSet");
                }
                return _AvailablePartsSet;
            }
        }
        private ObjectSet<AvailableParts> _AvailablePartsSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<PriceInfo> PriceInfoSet
        {
            get
            {
                if ((_PriceInfoSet == null))
                {
                    _PriceInfoSet = base.CreateObjectSet<PriceInfo>("PriceInfoSet");
                }
                return _PriceInfoSet;
            }
        }
        private ObjectSet<PriceInfo> _PriceInfoSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<StoreInfo> StoreInfoSet
        {
            get
            {
                if ((_StoreInfoSet == null))
                {
                    _StoreInfoSet = base.CreateObjectSet<StoreInfo>("StoreInfoSet");
                }
                return _StoreInfoSet;
            }
        }
        private ObjectSet<StoreInfo> _StoreInfoSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<NeededBoards> NeededBoardsSet
        {
            get
            {
                if ((_NeededBoardsSet == null))
                {
                    _NeededBoardsSet = base.CreateObjectSet<NeededBoards>("NeededBoardsSet");
                }
                return _NeededBoardsSet;
            }
        }
        private ObjectSet<NeededBoards> _NeededBoardsSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Table1Item> Table1ItemSet
        {
            get
            {
                if ((_Table1ItemSet == null))
                {
                    _Table1ItemSet = base.CreateObjectSet<Table1Item>("Table1ItemSet");
                }
                return _Table1ItemSet;
            }
        }
        private ObjectSet<Table1Item> _Table1ItemSet;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Table2Item> Table2ItemSet
        {
            get
            {
                if ((_Table2ItemSet == null))
                {
                    _Table2ItemSet = base.CreateObjectSet<Table2Item>("Table2ItemSet");
                }
                return _Table2ItemSet;
            }
        }
        private ObjectSet<Table2Item> _Table2ItemSet;

        #endregion

        #region AddTo メソッド
    
        /// <summary>
        /// NeededPartsSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToNeededPartsSet(NeededParts neededParts)
        {
            base.AddObject("NeededPartsSet", neededParts);
        }
    
        /// <summary>
        /// AvailablePartsSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToAvailablePartsSet(AvailableParts availableParts)
        {
            base.AddObject("AvailablePartsSet", availableParts);
        }
    
        /// <summary>
        /// PriceInfoSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToPriceInfoSet(PriceInfo priceInfo)
        {
            base.AddObject("PriceInfoSet", priceInfo);
        }
    
        /// <summary>
        /// StoreInfoSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToStoreInfoSet(StoreInfo storeInfo)
        {
            base.AddObject("StoreInfoSet", storeInfo);
        }
    
        /// <summary>
        /// NeededBoardsSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToNeededBoardsSet(NeededBoards neededBoards)
        {
            base.AddObject("NeededBoardsSet", neededBoards);
        }
    
        /// <summary>
        /// Table1ItemSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToTable1ItemSet(Table1Item table1Item)
        {
            base.AddObject("Table1ItemSet", table1Item);
        }
    
        /// <summary>
        /// Table2ItemSet EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToTable2ItemSet(Table2Item table2Item)
        {
            base.AddObject("Table2ItemSet", table2Item);
        }

        #endregion

    }

    #endregion

    #region エンティティ
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="AvailableParts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvailableParts : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい AvailableParts オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="category">Category プロパティの初期値。</param>
        /// <param name="name">Name プロパティの初期値。</param>
        /// <param name="comment">Comment プロパティの初期値。</param>
        /// <param name="partsUri">PartsUri プロパティの初期値。</param>
        /// <param name="partsImageUri">PartsImageUri プロパティの初期値。</param>
        /// <param name="stock">Stock プロパティの初期値。</param>
        /// <param name="rowVersion">RowVersion プロパティの初期値。</param>
        public static AvailableParts CreateAvailableParts(global::System.Int32 id, global::System.String category, global::System.String name, global::System.String comment, global::System.String partsUri, global::System.String partsImageUri, global::System.Int32 stock, global::System.Byte[] rowVersion)
        {
            AvailableParts availableParts = new AvailableParts();
            availableParts.Id = id;
            availableParts.Category = category;
            availableParts.Name = name;
            availableParts.Comment = comment;
            availableParts.PartsUri = partsUri;
            availableParts.PartsImageUri = partsImageUri;
            availableParts.Stock = stock;
            availableParts.RowVersion = rowVersion;
            return availableParts;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = value;
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LongName
        {
            get
            {
                return _LongName;
            }
            set
            {
                OnLongNameChanging(value);
                ReportPropertyChanging("LongName");
                _LongName = value;
                ReportPropertyChanged("LongName");
                OnLongNameChanged();
            }
        }
        private global::System.String _LongName;
        partial void OnLongNameChanging(global::System.String value);
        partial void OnLongNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = value;
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartsUri
        {
            get
            {
                return _PartsUri;
            }
            set
            {
                OnPartsUriChanging(value);
                ReportPropertyChanging("PartsUri");
                _PartsUri = value;
                ReportPropertyChanged("PartsUri");
                OnPartsUriChanged();
            }
        }
        private global::System.String _PartsUri;
        partial void OnPartsUriChanging(global::System.String value);
        partial void OnPartsUriChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartsImageUri
        {
            get
            {
                return _PartsImageUri;
            }
            set
            {
                OnPartsImageUriChanging(value);
                ReportPropertyChanging("PartsImageUri");
                _PartsImageUri = value;
                ReportPropertyChanged("PartsImageUri");
                OnPartsImageUriChanged();
            }
        }
        private global::System.String _PartsImageUri;
        partial void OnPartsImageUriChanging(global::System.String value);
        partial void OnPartsImageUriChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Stock
        {
            get
            {
                return _Stock;
            }
            set
            {
                OnStockChanging(value);
                ReportPropertyChanging("Stock");
                _Stock = value;
                ReportPropertyChanged("Stock");
                OnStockChanged();
            }
        }
        private global::System.Int32 _Stock;
        partial void OnStockChanging(global::System.Int32 value);
        partial void OnStockChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "AvailableParts_PriceInfo", "PriceInfo")]
        public EntityCollection<PriceInfo> PriceInfoCollection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PriceInfo>("LightSwitchApplication.AvailableParts_PriceInfo", "PriceInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PriceInfo>("LightSwitchApplication.AvailableParts_PriceInfo", "PriceInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "NeededParts_AvailableParts", "NeededParts")]
        public EntityCollection<NeededParts> NeededPartsCollection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NeededParts>("LightSwitchApplication.NeededParts_AvailableParts", "NeededParts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NeededParts>("LightSwitchApplication.NeededParts_AvailableParts", "NeededParts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="NeededBoards")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NeededBoards : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい NeededBoards オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="boardName">BoardName プロパティの初期値。</param>
        /// <param name="count">Count プロパティの初期値。</param>
        /// <param name="rowVersion">RowVersion プロパティの初期値。</param>
        public static NeededBoards CreateNeededBoards(global::System.Int32 id, global::System.String boardName, global::System.Int32 count, global::System.Byte[] rowVersion)
        {
            NeededBoards neededBoards = new NeededBoards();
            neededBoards.Id = id;
            neededBoards.BoardName = boardName;
            neededBoards.Count = count;
            neededBoards.RowVersion = rowVersion;
            return neededBoards;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BoardName
        {
            get
            {
                return _BoardName;
            }
            set
            {
                OnBoardNameChanging(value);
                ReportPropertyChanging("BoardName");
                _BoardName = value;
                ReportPropertyChanged("BoardName");
                OnBoardNameChanged();
            }
        }
        private global::System.String _BoardName;
        partial void OnBoardNameChanging(global::System.String value);
        partial void OnBoardNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = value;
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NeededBoards_NeededParts
        {
            get
            {
                return _NeededBoards_NeededParts;
            }
            set
            {
                OnNeededBoards_NeededPartsChanging(value);
                ReportPropertyChanging("NeededBoards_NeededParts");
                _NeededBoards_NeededParts = value;
                ReportPropertyChanged("NeededBoards_NeededParts");
                OnNeededBoards_NeededPartsChanged();
            }
        }
        private Nullable<global::System.Int32> _NeededBoards_NeededParts;
        partial void OnNeededBoards_NeededPartsChanging(Nullable<global::System.Int32> value);
        partial void OnNeededBoards_NeededPartsChanged();

        #endregion

    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "NeededBoards_NeededParts", "NeededParts")]
        public NeededParts NeededParts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NeededParts>("LightSwitchApplication.NeededBoards_NeededParts", "NeededParts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NeededParts>("LightSwitchApplication.NeededBoards_NeededParts", "NeededParts").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NeededParts> NeededPartsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NeededParts>("LightSwitchApplication.NeededBoards_NeededParts", "NeededParts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NeededParts>("LightSwitchApplication.NeededBoards_NeededParts", "NeededParts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="NeededParts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NeededParts : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい NeededParts オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="board">Board プロパティの初期値。</param>
        /// <param name="device">Device プロパティの初期値。</param>
        /// <param name="parts">Parts プロパティの初期値。</param>
        /// <param name="qty">Qty プロパティの初期値。</param>
        /// <param name="rowVersion">RowVersion プロパティの初期値。</param>
        public static NeededParts CreateNeededParts(global::System.Int32 id, global::System.String board, global::System.String device, global::System.String parts, global::System.Int32 qty, global::System.Byte[] rowVersion)
        {
            NeededParts neededParts = new NeededParts();
            neededParts.Id = id;
            neededParts.Board = board;
            neededParts.Device = device;
            neededParts.Parts = parts;
            neededParts.Qty = qty;
            neededParts.RowVersion = rowVersion;
            return neededParts;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Board
        {
            get
            {
                return _Board;
            }
            set
            {
                OnBoardChanging(value);
                ReportPropertyChanging("Board");
                _Board = value;
                ReportPropertyChanged("Board");
                OnBoardChanged();
            }
        }
        private global::System.String _Board;
        partial void OnBoardChanging(global::System.String value);
        partial void OnBoardChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = value;
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Device
        {
            get
            {
                return _Device;
            }
            set
            {
                OnDeviceChanging(value);
                ReportPropertyChanging("Device");
                _Device = value;
                ReportPropertyChanged("Device");
                OnDeviceChanged();
            }
        }
        private global::System.String _Device;
        partial void OnDeviceChanging(global::System.String value);
        partial void OnDeviceChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Parts
        {
            get
            {
                return _Parts;
            }
            set
            {
                OnPartsChanging(value);
                ReportPropertyChanging("Parts");
                _Parts = value;
                ReportPropertyChanged("Parts");
                OnPartsChanged();
            }
        }
        private global::System.String _Parts;
        partial void OnPartsChanging(global::System.String value);
        partial void OnPartsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = value;
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Int32 _Qty;
        partial void OnQtyChanging(global::System.Int32 value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NeededParts_AvailableParts
        {
            get
            {
                return _NeededParts_AvailableParts;
            }
            set
            {
                OnNeededParts_AvailablePartsChanging(value);
                ReportPropertyChanging("NeededParts_AvailableParts");
                _NeededParts_AvailableParts = value;
                ReportPropertyChanged("NeededParts_AvailableParts");
                OnNeededParts_AvailablePartsChanged();
            }
        }
        private Nullable<global::System.Int32> _NeededParts_AvailableParts;
        partial void OnNeededParts_AvailablePartsChanging(Nullable<global::System.Int32> value);
        partial void OnNeededParts_AvailablePartsChanged();

        #endregion

    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "NeededBoards_NeededParts", "NeededBoards")]
        public EntityCollection<NeededBoards> NeededBoardsCollection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NeededBoards>("LightSwitchApplication.NeededBoards_NeededParts", "NeededBoards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NeededBoards>("LightSwitchApplication.NeededBoards_NeededParts", "NeededBoards", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "NeededParts_AvailableParts", "AvailableParts")]
        public AvailableParts AvailableParts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableParts>("LightSwitchApplication.NeededParts_AvailableParts", "AvailableParts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableParts>("LightSwitchApplication.NeededParts_AvailableParts", "AvailableParts").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AvailableParts> AvailablePartsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableParts>("LightSwitchApplication.NeededParts_AvailableParts", "AvailableParts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AvailableParts>("LightSwitchApplication.NeededParts_AvailableParts", "AvailableParts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="PriceInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PriceInfo : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい PriceInfo オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="unit">Unit プロパティの初期値。</param>
        /// <param name="price">Price プロパティの初期値。</param>
        /// <param name="qty">Qty プロパティの初期値。</param>
        /// <param name="rowVersion">RowVersion プロパティの初期値。</param>
        /// <param name="priceInfo_StoreInfo">PriceInfo_StoreInfo プロパティの初期値。</param>
        /// <param name="availableParts_PriceInfo">AvailableParts_PriceInfo プロパティの初期値。</param>
        public static PriceInfo CreatePriceInfo(global::System.Int32 id, global::System.String unit, global::System.Int32 price, global::System.Int32 qty, global::System.Byte[] rowVersion, global::System.Int32 priceInfo_StoreInfo, global::System.Int32 availableParts_PriceInfo)
        {
            PriceInfo priceInfo = new PriceInfo();
            priceInfo.Id = id;
            priceInfo.Unit = unit;
            priceInfo.Price = price;
            priceInfo.Qty = qty;
            priceInfo.RowVersion = rowVersion;
            priceInfo.PriceInfo_StoreInfo = priceInfo_StoreInfo;
            priceInfo.AvailableParts_PriceInfo = availableParts_PriceInfo;
            return priceInfo;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = value;
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = value;
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Int32 _Price;
        partial void OnPriceChanging(global::System.Int32 value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = value;
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Int32 _Qty;
        partial void OnQtyChanging(global::System.Int32 value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceInfo_StoreInfo
        {
            get
            {
                return _PriceInfo_StoreInfo;
            }
            set
            {
                OnPriceInfo_StoreInfoChanging(value);
                ReportPropertyChanging("PriceInfo_StoreInfo");
                _PriceInfo_StoreInfo = value;
                ReportPropertyChanged("PriceInfo_StoreInfo");
                OnPriceInfo_StoreInfoChanged();
            }
        }
        private global::System.Int32 _PriceInfo_StoreInfo;
        partial void OnPriceInfo_StoreInfoChanging(global::System.Int32 value);
        partial void OnPriceInfo_StoreInfoChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AvailableParts_PriceInfo
        {
            get
            {
                return _AvailableParts_PriceInfo;
            }
            set
            {
                OnAvailableParts_PriceInfoChanging(value);
                ReportPropertyChanging("AvailableParts_PriceInfo");
                _AvailableParts_PriceInfo = value;
                ReportPropertyChanged("AvailableParts_PriceInfo");
                OnAvailableParts_PriceInfoChanged();
            }
        }
        private global::System.Int32 _AvailableParts_PriceInfo;
        partial void OnAvailableParts_PriceInfoChanging(global::System.Int32 value);
        partial void OnAvailableParts_PriceInfoChanged();

        #endregion

    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "PriceInfo_StoreInfo", "StoreInfo")]
        public StoreInfo StoreInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreInfo>("LightSwitchApplication.PriceInfo_StoreInfo", "StoreInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreInfo>("LightSwitchApplication.PriceInfo_StoreInfo", "StoreInfo").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StoreInfo> StoreInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoreInfo>("LightSwitchApplication.PriceInfo_StoreInfo", "StoreInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StoreInfo>("LightSwitchApplication.PriceInfo_StoreInfo", "StoreInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "AvailableParts_PriceInfo", "AvailableParts")]
        public AvailableParts AvailableParts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableParts>("LightSwitchApplication.AvailableParts_PriceInfo", "AvailableParts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableParts>("LightSwitchApplication.AvailableParts_PriceInfo", "AvailableParts").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AvailableParts> AvailablePartsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableParts>("LightSwitchApplication.AvailableParts_PriceInfo", "AvailableParts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AvailableParts>("LightSwitchApplication.AvailableParts_PriceInfo", "AvailableParts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="StoreInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoreInfo : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい StoreInfo オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="storeName">StoreName プロパティの初期値。</param>
        /// <param name="storeUri">StoreUri プロパティの初期値。</param>
        /// <param name="rowVersion">RowVersion プロパティの初期値。</param>
        public static StoreInfo CreateStoreInfo(global::System.Int32 id, global::System.String storeName, global::System.String storeUri, global::System.Byte[] rowVersion)
        {
            StoreInfo storeInfo = new StoreInfo();
            storeInfo.Id = id;
            storeInfo.StoreName = storeName;
            storeInfo.StoreUri = storeUri;
            storeInfo.RowVersion = rowVersion;
            return storeInfo;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoreName
        {
            get
            {
                return _StoreName;
            }
            set
            {
                OnStoreNameChanging(value);
                ReportPropertyChanging("StoreName");
                _StoreName = value;
                ReportPropertyChanged("StoreName");
                OnStoreNameChanged();
            }
        }
        private global::System.String _StoreName;
        partial void OnStoreNameChanging(global::System.String value);
        partial void OnStoreNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoreUri
        {
            get
            {
                return _StoreUri;
            }
            set
            {
                OnStoreUriChanging(value);
                ReportPropertyChanging("StoreUri");
                _StoreUri = value;
                ReportPropertyChanged("StoreUri");
                OnStoreUriChanged();
            }
        }
        private global::System.String _StoreUri;
        partial void OnStoreUriChanging(global::System.String value);
        partial void OnStoreUriChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "PriceInfo_StoreInfo", "PriceInfo")]
        public EntityCollection<PriceInfo> PriceInfoCollection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PriceInfo>("LightSwitchApplication.PriceInfo_StoreInfo", "PriceInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PriceInfo>("LightSwitchApplication.PriceInfo_StoreInfo", "PriceInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Table1Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Table1Item : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Table1Item オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="rowVersion">RowVersion プロパティの初期値。</param>
        public static Table1Item CreateTable1Item(global::System.Int32 id, global::System.Byte[] rowVersion)
        {
            Table1Item table1Item = new Table1Item();
            table1Item.Id = id;
            table1Item.RowVersion = rowVersion;
            return table1Item;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Table2Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Table2Item : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Table2Item オブジェクトを作成します。
        /// </summary>
        /// <param name="id">Id プロパティの初期値。</param>
        /// <param name="rowVersion">RowVersion プロパティの初期値。</param>
        public static Table2Item CreateTable2Item(global::System.Int32 id, global::System.Byte[] rowVersion)
        {
            Table2Item table2Item = new Table2Item();
            table2Item.Id = id;
            table2Item.RowVersion = rowVersion;
            return table2Item;
        }

        #endregion

        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();

        #endregion

    
    }

    #endregion

    
}
