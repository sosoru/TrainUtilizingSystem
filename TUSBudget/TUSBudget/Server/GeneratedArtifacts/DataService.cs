//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Inserting(global::LightSwitchApplication.NeededParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Inserted(global::LightSwitchApplication.NeededParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Updating(global::LightSwitchApplication.NeededParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Updated(global::LightSwitchApplication.NeededParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Deleting(global::LightSwitchApplication.NeededParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Deleted(global::LightSwitchApplication.NeededParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Validate(global::LightSwitchApplication.NeededParts entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Inserting(global::LightSwitchApplication.AvailableParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Inserted(global::LightSwitchApplication.AvailableParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Updating(global::LightSwitchApplication.AvailableParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Updated(global::LightSwitchApplication.AvailableParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Deleting(global::LightSwitchApplication.AvailableParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Deleted(global::LightSwitchApplication.AvailableParts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Validate(global::LightSwitchApplication.AvailableParts entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Inserting(global::LightSwitchApplication.PriceInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Inserted(global::LightSwitchApplication.PriceInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Updating(global::LightSwitchApplication.PriceInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Updated(global::LightSwitchApplication.PriceInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Deleting(global::LightSwitchApplication.PriceInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Deleted(global::LightSwitchApplication.PriceInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Validate(global::LightSwitchApplication.PriceInfo entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Inserting(global::LightSwitchApplication.StoreInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Inserted(global::LightSwitchApplication.StoreInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Updating(global::LightSwitchApplication.StoreInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Updated(global::LightSwitchApplication.StoreInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Deleting(global::LightSwitchApplication.StoreInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Deleted(global::LightSwitchApplication.StoreInfo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Validate(global::LightSwitchApplication.StoreInfo entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Inserting(global::LightSwitchApplication.NeededBoards entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Inserted(global::LightSwitchApplication.NeededBoards entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Updating(global::LightSwitchApplication.NeededBoards entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Updated(global::LightSwitchApplication.NeededBoards entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Deleting(global::LightSwitchApplication.NeededBoards entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Deleted(global::LightSwitchApplication.NeededBoards entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Validate(global::LightSwitchApplication.NeededBoards entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Inserting(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Inserted(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Updating(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Updated(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Deleting(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Deleted(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Validate(global::LightSwitchApplication.Table1Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededParts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededParts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededParts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededPartsSet_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.AvailableParts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AvailableParts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.AvailableParts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AvailableParts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.AvailableParts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AvailableParts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvailablePartsSet_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.PriceInfo> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PriceInfo> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.PriceInfo> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PriceInfo> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.PriceInfo> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PriceInfo> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceInfoSet_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.StoreInfo> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StoreInfo> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.StoreInfo> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StoreInfo> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.StoreInfo> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StoreInfo> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StoreInfoSet_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query2_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query2_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query2_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query2_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededParts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query2_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.NeededBoards> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededBoards> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.NeededBoards> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededBoards> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.NeededBoards> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededBoards> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NeededBoardsSet_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Table1Item> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Table1Item> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Table1Item> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Table1Item> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Table1Item> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Table1Item> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1ItemSet_All_ExecuteFailed(global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>
                __NeededPartsSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>(
                    "NeededPartsSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Validate);
            private static bool __NeededPartsSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.NeededPartsSet_CanInsert(ref result);
                return result;
            }
            private static bool __NeededPartsSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.NeededPartsSet_CanUpdate(ref result);
                return result;
            }
            private static bool __NeededPartsSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.NeededPartsSet_CanDelete(ref result);
                return result;
            }
            private static bool __NeededPartsSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.NeededPartsSet_CanRead(ref result);
                return result;
            }
            private static void __NeededPartsSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededParts e)
            {
                d.NeededPartsSet_Inserting(e);
            }
            private static void __NeededPartsSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededParts e)
            {
                d.NeededPartsSet_Inserted(e);
            }
            private static void __NeededPartsSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededParts e)
            {
                d.NeededPartsSet_Updating(e);
            }
            private static void __NeededPartsSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededParts e)
            {
                d.NeededPartsSet_Updated(e);
            }
            private static void __NeededPartsSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededParts e)
            {
                d.NeededPartsSet_Deleting(e);
            }
            private static void __NeededPartsSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededParts e)
            {
                d.NeededPartsSet_Deleted(e);
            }
            private static void __NeededPartsSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededParts e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.NeededPartsSet_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AvailableParts>
                __AvailablePartsSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AvailableParts>(
                    "AvailablePartsSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Validate);
            private static bool __AvailablePartsSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AvailablePartsSet_CanInsert(ref result);
                return result;
            }
            private static bool __AvailablePartsSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AvailablePartsSet_CanUpdate(ref result);
                return result;
            }
            private static bool __AvailablePartsSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AvailablePartsSet_CanDelete(ref result);
                return result;
            }
            private static bool __AvailablePartsSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AvailablePartsSet_CanRead(ref result);
                return result;
            }
            private static void __AvailablePartsSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AvailableParts e)
            {
                d.AvailablePartsSet_Inserting(e);
            }
            private static void __AvailablePartsSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AvailableParts e)
            {
                d.AvailablePartsSet_Inserted(e);
            }
            private static void __AvailablePartsSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AvailableParts e)
            {
                d.AvailablePartsSet_Updating(e);
            }
            private static void __AvailablePartsSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AvailableParts e)
            {
                d.AvailablePartsSet_Updated(e);
            }
            private static void __AvailablePartsSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AvailableParts e)
            {
                d.AvailablePartsSet_Deleting(e);
            }
            private static void __AvailablePartsSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AvailableParts e)
            {
                d.AvailablePartsSet_Deleted(e);
            }
            private static void __AvailablePartsSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AvailableParts e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AvailablePartsSet_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PriceInfo>
                __PriceInfoSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PriceInfo>(
                    "PriceInfoSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Validate);
            private static bool __PriceInfoSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PriceInfoSet_CanInsert(ref result);
                return result;
            }
            private static bool __PriceInfoSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PriceInfoSet_CanUpdate(ref result);
                return result;
            }
            private static bool __PriceInfoSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PriceInfoSet_CanDelete(ref result);
                return result;
            }
            private static bool __PriceInfoSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PriceInfoSet_CanRead(ref result);
                return result;
            }
            private static void __PriceInfoSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PriceInfo e)
            {
                d.PriceInfoSet_Inserting(e);
            }
            private static void __PriceInfoSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PriceInfo e)
            {
                d.PriceInfoSet_Inserted(e);
            }
            private static void __PriceInfoSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PriceInfo e)
            {
                d.PriceInfoSet_Updating(e);
            }
            private static void __PriceInfoSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PriceInfo e)
            {
                d.PriceInfoSet_Updated(e);
            }
            private static void __PriceInfoSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PriceInfo e)
            {
                d.PriceInfoSet_Deleting(e);
            }
            private static void __PriceInfoSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PriceInfo e)
            {
                d.PriceInfoSet_Deleted(e);
            }
            private static void __PriceInfoSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PriceInfo e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PriceInfoSet_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StoreInfo>
                __StoreInfoSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StoreInfo>(
                    "StoreInfoSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Validate);
            private static bool __StoreInfoSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StoreInfoSet_CanInsert(ref result);
                return result;
            }
            private static bool __StoreInfoSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StoreInfoSet_CanUpdate(ref result);
                return result;
            }
            private static bool __StoreInfoSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StoreInfoSet_CanDelete(ref result);
                return result;
            }
            private static bool __StoreInfoSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StoreInfoSet_CanRead(ref result);
                return result;
            }
            private static void __StoreInfoSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StoreInfo e)
            {
                d.StoreInfoSet_Inserting(e);
            }
            private static void __StoreInfoSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StoreInfo e)
            {
                d.StoreInfoSet_Inserted(e);
            }
            private static void __StoreInfoSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StoreInfo e)
            {
                d.StoreInfoSet_Updating(e);
            }
            private static void __StoreInfoSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StoreInfo e)
            {
                d.StoreInfoSet_Updated(e);
            }
            private static void __StoreInfoSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StoreInfo e)
            {
                d.StoreInfoSet_Deleting(e);
            }
            private static void __StoreInfoSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StoreInfo e)
            {
                d.StoreInfoSet_Deleted(e);
            }
            private static void __StoreInfoSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StoreInfo e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StoreInfoSet_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededBoards>
                __NeededBoardsSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededBoards>(
                    "NeededBoardsSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Validate);
            private static bool __NeededBoardsSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.NeededBoardsSet_CanInsert(ref result);
                return result;
            }
            private static bool __NeededBoardsSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.NeededBoardsSet_CanUpdate(ref result);
                return result;
            }
            private static bool __NeededBoardsSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.NeededBoardsSet_CanDelete(ref result);
                return result;
            }
            private static bool __NeededBoardsSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.NeededBoardsSet_CanRead(ref result);
                return result;
            }
            private static void __NeededBoardsSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededBoards e)
            {
                d.NeededBoardsSet_Inserting(e);
            }
            private static void __NeededBoardsSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededBoards e)
            {
                d.NeededBoardsSet_Inserted(e);
            }
            private static void __NeededBoardsSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededBoards e)
            {
                d.NeededBoardsSet_Updating(e);
            }
            private static void __NeededBoardsSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededBoards e)
            {
                d.NeededBoardsSet_Updated(e);
            }
            private static void __NeededBoardsSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededBoards e)
            {
                d.NeededBoardsSet_Deleting(e);
            }
            private static void __NeededBoardsSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededBoards e)
            {
                d.NeededBoardsSet_Deleted(e);
            }
            private static void __NeededBoardsSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.NeededBoards e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.NeededBoardsSet_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>
                __Table1ItemSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>(
                    "Table1ItemSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Validate);
            private static bool __Table1ItemSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1ItemSet_CanInsert(ref result);
                return result;
            }
            private static bool __Table1ItemSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1ItemSet_CanUpdate(ref result);
                return result;
            }
            private static bool __Table1ItemSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1ItemSet_CanDelete(ref result);
                return result;
            }
            private static bool __Table1ItemSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1ItemSet_CanRead(ref result);
                return result;
            }
            private static void __Table1ItemSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1ItemSet_Inserting(e);
            }
            private static void __Table1ItemSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1ItemSet_Inserted(e);
            }
            private static void __Table1ItemSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1ItemSet_Updating(e);
            }
            private static void __Table1ItemSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1ItemSet_Updated(e);
            }
            private static void __Table1ItemSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1ItemSet_Deleting(e);
            }
            private static void __Table1ItemSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1ItemSet_Deleted(e);
            }
            private static void __Table1ItemSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Table1ItemSet_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>
                __NeededPartsSet_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>(
                    "NeededPartsSet_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_Single_PreprocessQuery);
            private static bool __NeededPartsSet_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.NeededPartsSet_Single_CanExecute(ref r);
                return r;
            }
            private static void __NeededPartsSet_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededPartsSet_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __NeededPartsSet_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededPartsSet_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededParts>)args[1]);
            }
            private static void __NeededPartsSet_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.NeededPartsSet_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __NeededPartsSet_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts>)args[1];
                d.NeededPartsSet_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>
                __NeededPartsSet_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>(
                    "NeededPartsSet_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_SingleOrDefault_PreprocessQuery);
            private static bool __NeededPartsSet_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.NeededPartsSet_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __NeededPartsSet_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededPartsSet_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __NeededPartsSet_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededPartsSet_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededParts>)args[1]);
            }
            private static void __NeededPartsSet_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.NeededPartsSet_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __NeededPartsSet_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts>)args[1];
                d.NeededPartsSet_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>
                __NeededPartsSet_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>(
                    "NeededPartsSet_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededPartsSet_All_PreprocessQuery);
            private static bool __NeededPartsSet_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.NeededPartsSet_All_CanExecute(ref r);
                return r;
            }
            private static void __NeededPartsSet_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededPartsSet_All_Executing();
            }
            private static void __NeededPartsSet_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededPartsSet_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededParts>)args[0]);
            }
            private static void __NeededPartsSet_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.NeededPartsSet_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __NeededPartsSet_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts>)args[0];
                d.NeededPartsSet_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AvailableParts>
                __AvailablePartsSet_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AvailableParts>(
                    "AvailablePartsSet_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_Single_PreprocessQuery);
            private static bool __AvailablePartsSet_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.AvailablePartsSet_Single_CanExecute(ref r);
                return r;
            }
            private static void __AvailablePartsSet_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailablePartsSet_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __AvailablePartsSet_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailablePartsSet_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AvailableParts>)args[1]);
            }
            private static void __AvailablePartsSet_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.AvailablePartsSet_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __AvailablePartsSet_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.AvailableParts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.AvailableParts>)args[1];
                d.AvailablePartsSet_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AvailableParts>
                __AvailablePartsSet_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AvailableParts>(
                    "AvailablePartsSet_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_SingleOrDefault_PreprocessQuery);
            private static bool __AvailablePartsSet_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.AvailablePartsSet_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __AvailablePartsSet_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailablePartsSet_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __AvailablePartsSet_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailablePartsSet_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AvailableParts>)args[1]);
            }
            private static void __AvailablePartsSet_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.AvailablePartsSet_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __AvailablePartsSet_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.AvailableParts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.AvailableParts>)args[1];
                d.AvailablePartsSet_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AvailableParts>
                __AvailablePartsSet_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AvailableParts>(
                    "AvailablePartsSet_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AvailablePartsSet_All_PreprocessQuery);
            private static bool __AvailablePartsSet_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.AvailablePartsSet_All_CanExecute(ref r);
                return r;
            }
            private static void __AvailablePartsSet_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailablePartsSet_All_Executing();
            }
            private static void __AvailablePartsSet_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AvailablePartsSet_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AvailableParts>)args[0]);
            }
            private static void __AvailablePartsSet_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.AvailablePartsSet_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __AvailablePartsSet_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.AvailableParts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.AvailableParts>)args[0];
                d.AvailablePartsSet_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PriceInfo>
                __PriceInfoSet_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PriceInfo>(
                    "PriceInfoSet_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_Single_PreprocessQuery);
            private static bool __PriceInfoSet_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PriceInfoSet_Single_CanExecute(ref r);
                return r;
            }
            private static void __PriceInfoSet_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PriceInfoSet_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __PriceInfoSet_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PriceInfoSet_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PriceInfo>)args[1]);
            }
            private static void __PriceInfoSet_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PriceInfoSet_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __PriceInfoSet_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PriceInfo> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PriceInfo>)args[1];
                d.PriceInfoSet_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PriceInfo>
                __PriceInfoSet_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PriceInfo>(
                    "PriceInfoSet_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_SingleOrDefault_PreprocessQuery);
            private static bool __PriceInfoSet_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PriceInfoSet_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __PriceInfoSet_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PriceInfoSet_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __PriceInfoSet_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PriceInfoSet_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PriceInfo>)args[1]);
            }
            private static void __PriceInfoSet_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PriceInfoSet_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __PriceInfoSet_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PriceInfo> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PriceInfo>)args[1];
                d.PriceInfoSet_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PriceInfo>
                __PriceInfoSet_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PriceInfo>(
                    "PriceInfoSet_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PriceInfoSet_All_PreprocessQuery);
            private static bool __PriceInfoSet_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PriceInfoSet_All_CanExecute(ref r);
                return r;
            }
            private static void __PriceInfoSet_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PriceInfoSet_All_Executing();
            }
            private static void __PriceInfoSet_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PriceInfoSet_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PriceInfo>)args[0]);
            }
            private static void __PriceInfoSet_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PriceInfoSet_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __PriceInfoSet_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PriceInfo> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PriceInfo>)args[0];
                d.PriceInfoSet_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StoreInfo>
                __StoreInfoSet_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StoreInfo>(
                    "StoreInfoSet_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_Single_PreprocessQuery);
            private static bool __StoreInfoSet_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.StoreInfoSet_Single_CanExecute(ref r);
                return r;
            }
            private static void __StoreInfoSet_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.StoreInfoSet_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __StoreInfoSet_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.StoreInfoSet_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StoreInfo>)args[1]);
            }
            private static void __StoreInfoSet_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.StoreInfoSet_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __StoreInfoSet_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.StoreInfo> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.StoreInfo>)args[1];
                d.StoreInfoSet_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StoreInfo>
                __StoreInfoSet_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StoreInfo>(
                    "StoreInfoSet_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_SingleOrDefault_PreprocessQuery);
            private static bool __StoreInfoSet_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.StoreInfoSet_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __StoreInfoSet_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.StoreInfoSet_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __StoreInfoSet_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.StoreInfoSet_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StoreInfo>)args[1]);
            }
            private static void __StoreInfoSet_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.StoreInfoSet_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __StoreInfoSet_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.StoreInfo> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.StoreInfo>)args[1];
                d.StoreInfoSet_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StoreInfo>
                __StoreInfoSet_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StoreInfo>(
                    "StoreInfoSet_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StoreInfoSet_All_PreprocessQuery);
            private static bool __StoreInfoSet_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.StoreInfoSet_All_CanExecute(ref r);
                return r;
            }
            private static void __StoreInfoSet_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.StoreInfoSet_All_Executing();
            }
            private static void __StoreInfoSet_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.StoreInfoSet_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StoreInfo>)args[0]);
            }
            private static void __StoreInfoSet_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.StoreInfoSet_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __StoreInfoSet_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.StoreInfo> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.StoreInfo>)args[0];
                d.StoreInfoSet_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>
                __Query2Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededParts>(
                    "Query2",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query2_PreprocessQuery);
            private static bool __Query2_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Query2_CanExecute(ref r);
                return r;
            }
            private static void __Query2_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Query2_Executing();
            }
            private static void __Query2_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Query2_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededParts>)args[0]);
            }
            private static void __Query2_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Query2_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Query2_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.NeededParts>)args[0];
                d.Query2_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededBoards>
                __NeededBoardsSet_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededBoards>(
                    "NeededBoardsSet_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_Single_PreprocessQuery);
            private static bool __NeededBoardsSet_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.NeededBoardsSet_Single_CanExecute(ref r);
                return r;
            }
            private static void __NeededBoardsSet_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededBoardsSet_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __NeededBoardsSet_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededBoardsSet_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededBoards>)args[1]);
            }
            private static void __NeededBoardsSet_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.NeededBoardsSet_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __NeededBoardsSet_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.NeededBoards> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.NeededBoards>)args[1];
                d.NeededBoardsSet_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededBoards>
                __NeededBoardsSet_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededBoards>(
                    "NeededBoardsSet_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_SingleOrDefault_PreprocessQuery);
            private static bool __NeededBoardsSet_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.NeededBoardsSet_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __NeededBoardsSet_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededBoardsSet_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __NeededBoardsSet_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededBoardsSet_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededBoards>)args[1]);
            }
            private static void __NeededBoardsSet_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.NeededBoardsSet_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __NeededBoardsSet_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.NeededBoards> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.NeededBoards>)args[1];
                d.NeededBoardsSet_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededBoards>
                __NeededBoardsSet_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.NeededBoards>(
                    "NeededBoardsSet_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NeededBoardsSet_All_PreprocessQuery);
            private static bool __NeededBoardsSet_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.NeededBoardsSet_All_CanExecute(ref r);
                return r;
            }
            private static void __NeededBoardsSet_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededBoardsSet_All_Executing();
            }
            private static void __NeededBoardsSet_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NeededBoardsSet_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.NeededBoards>)args[0]);
            }
            private static void __NeededBoardsSet_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.NeededBoardsSet_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __NeededBoardsSet_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.NeededBoards> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.NeededBoards>)args[0];
                d.NeededBoardsSet_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>
                __Table1ItemSet_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>(
                    "Table1ItemSet_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_Single_PreprocessQuery);
            private static bool __Table1ItemSet_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Table1ItemSet_Single_CanExecute(ref r);
                return r;
            }
            private static void __Table1ItemSet_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Table1ItemSet_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Table1ItemSet_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Table1ItemSet_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Table1Item>)args[1]);
            }
            private static void __Table1ItemSet_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Table1ItemSet_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Table1ItemSet_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Table1Item> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Table1Item>)args[1];
                d.Table1ItemSet_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>
                __Table1ItemSet_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>(
                    "Table1ItemSet_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_SingleOrDefault_PreprocessQuery);
            private static bool __Table1ItemSet_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Table1ItemSet_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Table1ItemSet_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Table1ItemSet_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Table1ItemSet_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Table1ItemSet_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Table1Item>)args[1]);
            }
            private static void __Table1ItemSet_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Table1ItemSet_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Table1ItemSet_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Table1Item> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Table1Item>)args[1];
                d.Table1ItemSet_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>
                __Table1ItemSet_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>(
                    "Table1ItemSet_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1ItemSet_All_PreprocessQuery);
            private static bool __Table1ItemSet_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Table1ItemSet_All_CanExecute(ref r);
                return r;
            }
            private static void __Table1ItemSet_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Table1ItemSet_All_Executing();
            }
            private static void __Table1ItemSet_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Table1ItemSet_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Table1Item>)args[0]);
            }
            private static void __Table1ItemSet_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Table1ItemSet_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Table1ItemSet_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Table1Item> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Table1Item>)args[0];
                d.Table1ItemSet_All_PreprocessQuery(ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
